<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnNoviUnos.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        hA8EP/EUX/0+xJ1mWZ/xGr/xHN8j70cfiD/B4mMwHwg3lvFABhSIyFiuDmTAeYu/PhC89idZ+B55f22B
        8DmxD4QTgHgg3e6FyRt0BSIyieRA8DQeSLfz151kRYHg93UHwv+Mwg/wSbE/4lUg4kZgxECsz3iN33iO
        75H31x8IX08qEHEjEAoEjxWI+L9GgQgRQIEIEUCBCBFAgQgRQIEIEUCBCBFAgQgRQIEIEUCBCBFAgQgR
        QIEIEUCBCBFAgQgRQIEIEUCBCBFAgQgRQIEIEUCBCBFAgQgRQIEIEUCBCBFAgQgRQIEIEUCBCBFAgQgR
        QIEIEUCBCBFAgQgRQIEIEUCBCBFAgQgRQIEIEUCBCBFAgQgRQIEIEUCBCBFAgQgRQIEIEUCBCBFAgQgR
        QIEIEUCBCBFAgQgRQIEIEUCBCBFAgQgRQIEIEUCBCBFAgQgRQIEIEUCBCBFAgQgRQIEIEUCBCBFAgQgR
        QIEIEUCBCBFAgQgRIC2BNB9UIOLGIBQIHv9PAiktW+d+YOu2Xaa+/oACETcMIwZifcZr/MZzfI+8v7ZA
        PtmwORFIU3NbFMhZ98JzvRcUiMhIkgPB03ggZ52/eOwDwe/rDqSk9CP3AzVbdyYCaTvSGQXSr0BExnJ1
        IP3OW/z1geA1fuM5vkfejz6QNSVrTeXHm0x1TZ3ZvafBHGhqNa1tx92Luk73mZ5zg6Z/4MtEIIpEZALe
        RbzETzzFV7zFXzzGZ7zGbzzH98j7EQO5x+ICKV5dbioqN5otW2rNrt37TWPjYfNZa4c51nHanOrqdS/u
        679kvhj82lwY+laRiLTjHcRHvMRPPMVXvMVfPMZnvMZvPMf3yHv8HzGQbMu8VatKzbr1G8ymzdvMjrq9
        Zn/DIdNyuN0cbT9lTpzsMWfOnr9io54ciRDpAg/98qq376LzFF/xFn/xGJ/xGr/xHN8j70cVyFOWuUUr
        1pgP11aaqqpqs712T+Ko1+9DmLa6ewbdIBgMxTIwIdIJHvo48NMvr/DWH/HiM17jN57je+R9MJAplrss
        0y2zCgoKf/QnWazXmJYaGloSs0jniR63+YlHMuSmM9Z8DE6IdIB/eIiPeImfeOpnD/zFY3z2J1jW83/h
        e+Q9/k9JFUjMcqflMcsLi95Z8l1xcVlimVVbW+/q4xSAtVz7sS73cgplGmNArPc4NQAGKcR44J3DPzzE
        R7zETzxlc463e/c1OY/98or9B57ju+XxyP9YqkAmW+6wPGKZmZu7oJPpp7y8Ij6LVO8wdTv3mX2fNrup
        ikgok+mLNR4bIQZFtXEGhBhH+p1/eIiPeImfeIqveIu/eIzPeI3feI7vkff4PzlVIJMst1oetMzIyXmp
        bNnyIlcZtbFm4+yYKYqXUSTTFms7BsIpAYO6TLcQ48Rl7/AQH/ESP/EUX/EWf/HYzx74jef4HnmP/5NS
        BTLBcouFjcqTU6dOm7Nw0eLvCwuL3WVKRUWVqdpY415CiSy3WNNRJwOhVKYyBsaNpRDjCd7hHx7iI17i
        J57iq4vD+ovH+IzXCxe99wOe43vkPf5PCAXCPoRp5mHLM7Pn5JTk53/gpiI+6nKR2AKZpljLUSUD4OiM
        82UuYSgWGCDw9aQQY4F3zDuHf3iIj3iJn3iKr3iLv3i8YmWJwWv8xvPId7zH/2AgLLOmWe62sGn53Wuv
        /bExv6DQRUJ5TE+s4djocBrAkRnnygyGG0qu8RPYQQoxpiT5hn94iI94iZ94iq94i794jM94jd+R5/iO
        9/ifMhAeP4vcZrnPkhWLTXl+/vxXdixduvwnpiXWbmxwfCiUySC4mWRATGXAx2B8UizEWIJn3jn8w0N8
        xEsfBr7iLf7iMT7jNX5HnuO7mz0sV8QxXCATLVwa3m6538L58HNZWdlvvPV23ldsbAqLVhuOgDlH5rKF
        QXBtz7ctDMrD58RCjCXJvuEfHuIjXuInnjJr4C3+Zmf/9s/4HHmN33iO73g/YiA8fqnlI7nX8qhlRiwW
        e3H27Jzi13PfPJmXt/ib999f6V7OdT2F8uEXMDBgvSfEWOJd8+7hIT7iJX7iae6fFnRZb1fjLx5HPjNz
        +Djc0srinpEC4fGRcLvO0Rc3jA9ZnrA8bXnWwhTFDSTX9HzLIkQmgZf4ySUgvuIt/v7Kgs94jd9XxMEz
        mkB4+EtMO1wgTrVQGz/8gIVLFW7cmab4hoUPvfgaUohMAB/xEj/xFF+552Azjsf4jNeJZVXyM9pA/ONn
        EzYxnBNTHkdiXMsTDOfHHr6nFyKdJPuIn3iKr3iLv3h81ayR/FxrIDz8mIcfpz5exPpNiEwGT/HVR+FJ
        +QwbiBBieIb9QyFEnGH/UAgB5qb/AsZLB4SMIOhzAAAAAElFTkSuQmCC
</value>
  </data>
</root>